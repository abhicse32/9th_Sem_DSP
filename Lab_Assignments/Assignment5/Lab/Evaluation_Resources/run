#!/usr/bin/env python
import  sys,os,re
from subprocess import call,Popen,PIPE
solDir,outDir,execDir,testDir="solutions","outputs","executables","testcases"
submissions_dir="Submissions"

def execute(opts="all"):
    os.system("make clean")
    os.system("make "+opts+" -i")
    code_dirs= os.listdir(submissions_dir)
    for dir_ in code_dirs:
        code_path= os.path.join(submissions_dir,os.path.join(dir_,"Code"))
        exec_dir= os.path.join(code_path,execDir)
        out_dir= os.path.join(code_path,outDir)
        exec_files= os.listdir(exec_dir)
        for file_ in exec_files:
            exec_path= os.path.join(exec_dir,file_)
            print "running %s"%(exec_path)
            out_path= os.path.join(out_dir,file_+".out")
            test_path= os.path.join(testDir,file_+".in")
            os.system("./"+exec_path+" < "+test_path+" > "+ out_path)

def evaluate():
    code_dirs= os.listdir(submissions_dir)
    for dir_ in code_dirs:
        code_path= os.path.join(submissions_dir,os.path.join(dir_,"Code"))
        exec_dir= os.path.join(code_path,execDir)
        out_dir= os.path.join(code_path,outDir)
        exec_files= [f for f in os.listdir(exec_dir) if not f.startswith('.') and not f.startswith('~')]
        print "evaluating: %s"%(dir_)
        res_file= os.path.join(code_path,"result.txt")
        with open(res_file,"w") as res_writer:
            for file_ in exec_files:
                res_writer.write(file_+"\n")
                out_file= os.path.join(out_dir,file_+'.out')
                ans_file= os.path.join(solDir,file_+'.ans')
                with open(out_file,"r") as out_reader:
                    with open(ans_file,"r") as ans_reader:
                        total,passed=0,0
                        for lines in ans_reader:
                            ans_line= lines.strip()
                            out_line= out_reader.readline().strip()
                            total+=1
                            if ans_line== out_line:
                                passed+=1
                                res_writer.write("testcase %d: passed\n"%(total))
                            else:
                                res_writer.write("testcase %d: failed\n"%(total))
                res_writer.write("\n****final result: %d/%d****\n\n"%(passed,total))


if __name__=='__main__':
    opts="all"
    if len(sys.argv)>1:
        opts=' '.join(sys.argv[1:])
    execute(opts)
    evaluate()